.container
{
    border: 5px solid black;
    
}
.flex-item
{
    font-size: 18px;
    text-align:center;
    color: red;
    padding: 8px;
}

.item-1
{
    background-color: white;

}
.item-2
{

    background-color:blue;
}

.item-3
{
    background-color:brown;
}
.item-4
{
    background-color: orangered;
}
.item-5
{
    background-color: rgb(100 150 230);

}

.item-6
{
    background-color: palegreen;
}

.item-7
{
    background-color: orchid;
}

.item-8
{
    background-color: brown;
}

.item-9
{
    background-color: goldenrod;
}


/*----flex/inline-flex difference*/

.container
{
    display: flex;
}
/*
.container
{
    display: inline-flex;
}
*/

/*---flex-direction---*/

.container
{
    display: flex;
    flex-direction: row; /*--default value of flex-direction--*/
}

.container{
    display: flex;
    flex-direction: row-reverse;
}

.container{
    display: flex;
    flex-direction: column;
}

.container
{
    display: flex;
    flex-direction: column-reverse;
}


/*---justify-content--*/

.container
{
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
}

.container
{
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
}

.container
{
    display: flex;
    flex-direction: row;
    justify-content: center;
}

.container
{
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
}


.container
{
    display: flex;
    flex-direction: column;
    justify-content: center;
}


.container
{
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
}
.container
{
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    height: 50vh;

}

.container
{
    margin-right: auto;
}

.container{
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: flex-start;  /*--align-items works on cross axis (opposite main axis.here main axis is x as flex-direction row--*/
}

.container
{

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: stretch;

}

.container
{
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: flex-end;
    
}
/*--difference between--*justify-content and align-content--*/
.container{

    display: flex;
    justify-content: row;
    align-items: center;

}

.container
{
    display: flex;
    justify-content: row;
    flex: wrap;
    height: 600px;
    
    align-content: center;

}

/*short hand property of flex-direction and flex-wrap
.container
{
    display: flex;
    flex-direction: row;
    flex: wrap;
    align-content: center;

}
similaar to
*/
.container
{
    display: flex;
    flex-flow: row wrap;
   
}

.container
{
    display: flex;
    flex-flow: row wrap-reverse;
}

/*wrapping row direction column*/
.container
{
    display: flex;      /*flexwrap not working*/
    height:200px;
    flex-flow: column wrap;
}


.container
{
    display: flex;
    flex-direction: column; /*output same as above*/
    justify-content: center;
    align-items: center;
}


/*--row-gap column-gap used to make gap between rows/columns after shrinking the website
.container
{
    display: flex;
    flex-flow: row wrap;
    row-gap: 40px;
    column-gap: 40px;
}
--*/
.container
{
    display: flex;
    flex-direction: row;

   
}
/*--to evenly distrubute the sizing of each item and if value given higher for  a particular item more size given to the item*--
.flex-item
{
    flex-grow: 1;
}


.item-4
{
    flex-grow: 4; /*default value is 0
}
*/
.flex-item
{
    width: 100px;
}

.item-4
{
    flex-shrink: 2; /*--not working--*/
}

/*--setting width of a particular item--*/

.item-4{
    flex-basis: 200px;

}

/*--short hand property of flex--*/

.item-3{
    flex: 1 0 300px;
}

.item-2{
    flex: 0 1 100px; /*--flexgrow flexshrink flexbasis--*/
}

/*--align-self--*/

.container{
    display: flex;
    height: 500px;
    align-items: stretch; /*--stretch used to stretch items in cross axis--*/
}

.item-1
{
    align-self: auto;  /*--same as align-items take value as in align-item if mentioned auto*/
}

.item-2{
    align-self: space-around;
}
